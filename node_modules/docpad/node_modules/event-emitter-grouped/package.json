{
  "title": "Event Emitter Grouped",
  "name": "event-emitter-grouped",
  "version": "2.3.2",
  "description": "Emit events in serial or parallel with support for synchronous and asynchronous listeners",
  "homepage": "https://github.com/bevry/event-emitter-grouped",
  "license": {
    "type": "MIT"
  },
  "badges": {
    "travis": true,
    "npm": true,
    "gittip": "bevry",
    "flattr": "344188/balupton-on-Flattr",
    "paypal": "QB8GQPZAH84N6"
  },
  "keywords": [
    "event",
    "events",
    "emitter",
    "eventemitter",
    "async",
    "sync",
    "parallel",
    "serial",
    "flow",
    "completion",
    "callback"
  ],
  "author": {
    "name": "2013+ Bevry Pty Ltd",
    "email": "us@bevry.me",
    "url": "http://bevry.me"
  },
  "maintainers": [
    {
      "name": "Benjamin Lupton",
      "email": "b@lupton.cc",
      "url": "https://github.com/balupton"
    }
  ],
  "contributors": [
    {
      "name": "Benjamin Lupton",
      "email": "b@lupton.cc",
      "url": "https://github.com/balupton"
    },
    {
      "name": "sfrdmn",
      "url": "https://github.com/sfrdmn"
    }
  ],
  "bugs": {
    "url": "https://github.com/bevry/event-emitter-grouped/issues"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/bevry/event-emitter-grouped.git"
  },
  "engines": {
    "node": ">=0.4"
  },
  "dependencies": {
    "ambi": "~2.1.6",
    "taskgroup": "~3.3.1"
  },
  "devDependencies": {
    "coffee-script": "~1.6.2",
    "joe": "~1.3.0",
    "joe-reporter-console": "~1.2.1",
    "chai": "~1.8.1",
    "projectz": "~0.2.3"
  },
  "directories": {
    "lib": "./out/lib"
  },
  "scripts": {
    "test": "node ./out/test/event-emitter-grouped-test.js"
  },
  "main": "./out/lib/event-emitter-grouped.js",
  "readme": "\n<!-- TITLE/ -->\n\n# Event Emitter Grouped\n\n<!-- /TITLE -->\n\n\n<!-- BADGES/ -->\n\n[![Build Status](http://img.shields.io/travis-ci/bevry/event-emitter-grouped.png?branch=master)](http://travis-ci.org/bevry/event-emitter-grouped \"Check this project's build status on TravisCI\")\n[![NPM version](http://badge.fury.io/js/event-emitter-grouped.png)](https://npmjs.org/package/event-emitter-grouped \"View this project on NPM\")\n[![Gittip donate button](http://img.shields.io/gittip/bevry.png)](https://www.gittip.com/bevry/ \"Donate weekly to this project using Gittip\")\n[![Flattr donate button](http://img.shields.io/flattr/donate.png?color=yellow)](http://flattr.com/thing/344188/balupton-on-Flattr \"Donate monthly to this project using Flattr\")\n[![PayPayl donate button](http://img.shields.io/paypal/donate.png?color=yellow)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=QB8GQPZAH84N6 \"Donate once-off to this project using Paypal\")\n\n<!-- /BADGES -->\n\n\n<!-- DESCRIPTION/ -->\n\nEmit events in serial or parallel with support for synchronous and asynchronous listeners\n\n<!-- /DESCRIPTION -->\n\n\n<!-- INSTALL/ -->\n\n## Install\n\n### [Node](http://nodejs.org/), [Browserify](http://browserify.org/)\n- Use: `require('event-emitter-grouped')`\n- Install: `npm install --save event-emitter-grouped`\n\n### [Ender](http://ender.jit.su/)\n- Use: `require('event-emitter-grouped')`\n- Install: `ender add event-emitter-grouped`\n\n<!-- /INSTALL -->\n\n\n## Usage\n\n``` javascript\n// Importer\nvar EventEmitterGrouped = require('event-emitter-grouped').EventEmitterGrouped;\n\n// Instantiate a new instance\nvar emitter = new EventEmitterGrouped();\n\n// Bind an asynchronous event\nemitter.on('hello', function(next){\n\tconsole.log('\\tasync started');\n\tsetTimeout(function(){\n\t\tconsole.log('\\tasync finished');\n\t\tnext();\n\t}, 1000);\n});\n\n// Bind a synchronous event\nemitter.on('hello', function(){\n\tconsole.log('\\tsync started and finished');\n});\n\n// Bind a prioritized event\nvipListener = function(){\n\tconsole.log('\\tvip started and finished');\n};\nvipListener.priority = 1;\nemitter.on('hello', vipListener);\n\n// Emit the events in serial (one after the other in a waiting fashion)\nconsole.log('hello in serial started');\nemitter.emitSerial('hello', function(err){\n\tconsole.log('hello in serial finished');\n\n\t// Emit the events in parallel (all at once)\n\tconsole.log('hello in parallel started');\n\temitter.emitParallel('hello', function(err){\n\t\tconsole.log('hello in parallel finished');\n\t});\n});\n\n/* Outputs:\nhello in serial started\n\tvip started and finished\n\tasync started\n\tasync finished\n\tsync started and finished\nhello in serial finished\nhello in parallel started\n\tvip started and finished\n\tasync started\n\tsync started and finished\n\tasync finished\nhello in parallel finished\n*/\n```\n\n\n### EventEmitterGrouped, extends [events.EventEmitter](http://nodejs.org/api/events.html#events_class_events_eventemitter)\n\n- `getListenerGroup(eventName, args..., next?)` - returns a [TaskGroup](https://github.com/bevry/taskgroup#files) where each listener is a task, ordered by the highest priority listeners first\n\t- `eventName` is the event that we should get the listeners for\n\t- `args...` is an optional set of arguments that should be passed to the listeners when they are executed\n\t- `next` is an optional completion callback that will fire once all the tasks/listeners have compeleted\n- `off` - alias for [events.EventEmitter.prototype.removeListener](http://nodejs.org/api/events.html#events_emitter_removelistener_event_listener)\n- `emitSerial(eventName, args..., next?)` - fetch the listener group and execute it in serial\n- `emitParallel(eventName, args..., next?)` - fetch the listener group and execute it in parallel\n\n\n\n<!-- HISTORY/ -->\n\n## History\n[Discover the change history by heading on over to the `History.md` file.](https://github.com/bevry/event-emitter-grouped/blob/master/History.md#files)\n\n<!-- /HISTORY -->\n\n\n<!-- CONTRIBUTE/ -->\n\n## Contribute\n\n[Discover how you can contribute by heading on over to the `Contributing.md` file.](https://github.com/bevry/event-emitter-grouped/blob/master/Contributing.md#files)\n\n<!-- /CONTRIBUTE -->\n\n\n<!-- BACKERS/ -->\n\n## Backers\n\n### Maintainers\n\nThese amazing people are maintaining this project:\n\n- Benjamin Lupton <b@lupton.cc> (https://github.com/balupton)\n\n### Sponsors\n\nNo sponsors yet! Will you be the first?\n\n[![Gittip donate button](http://img.shields.io/gittip/bevry.png)](https://www.gittip.com/bevry/ \"Donate weekly to this project using Gittip\")\n[![Flattr donate button](http://img.shields.io/flattr/donate.png?color=yellow)](http://flattr.com/thing/344188/balupton-on-Flattr \"Donate monthly to this project using Flattr\")\n[![PayPayl donate button](http://img.shields.io/paypal/donate.png?color=yellow)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=QB8GQPZAH84N6 \"Donate once-off to this project using Paypal\")\n\n### Contributors\n\nThese amazing people have contributed code to this project:\n\n- Benjamin Lupton <b@lupton.cc> (https://github.com/balupton) - [view contributions](https://github.com/bevry/event-emitter-grouped/commits?author=balupton)\n- sfrdmn (https://github.com/sfrdmn) - [view contributions](https://github.com/bevry/event-emitter-grouped/commits?author=sfrdmn)\n\n[Become a contributor!](https://github.com/bevry/event-emitter-grouped/blob/master/Contributing.md#files)\n\n<!-- /BACKERS -->\n\n\n<!-- LICENSE/ -->\n\n## License\n\nLicensed under the incredibly [permissive](http://en.wikipedia.org/wiki/Permissive_free_software_licence) [MIT license](http://creativecommons.org/licenses/MIT/)\n\nCopyright &copy; 2013+ Bevry Pty Ltd <us@bevry.me> (http://bevry.me)\n<br/>Copyright &copy; 2011-2012 Benjamin Lupton <b@lupton.cc> (http://balupton.com)\n\n<!-- /LICENSE -->\n\n\n",
  "readmeFilename": "README.md",
  "_id": "event-emitter-grouped@2.3.2",
  "_from": "event-emitter-grouped@~2.3.1"
}
